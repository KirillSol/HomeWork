namespace VARIABLE
{
    internal class Program
    {
        static void Main(string[] args)
        {
            // ПЕРЕМЕННЫЕ (variable)
            // используются для хранения данных
            // Ключевое слово var за которым следует идентификатор переменной, далее
            // оператор присваивания и значение переменной

            /// Учись писать осмысленные названия!!!
             /// 
            var age= 20;
            var weight = 84.5;
            var title = "Переменная";

            //Виды контерйнеров или типов данных в С# есть:
            #region Числового типа

            /// Целые числа Со знаком -4, 5

            sbyte int8 = 2; // от -128 до +127
            short int16 = 1; // от -32768 до +32767
            int int32 = 0; // от -2^31 до +2^31-1 >>> от -2 147 483 648 до + 2 147 483 647
            long int64 = -1; // от -2^63 до +2^63-1 >>> от -9 223 372 036 854 775 808 до +9 223 372 036 854 775 807
           
            /// Без знака 1, 2, 6
            
            byte uInt8 = 0; // от 0 до 2^8 >>> 255
            ushort uInt16 = 1; // от 0 до 2^16 >>> 65536
            uint uInt32 = 2; // от 0 до 2^32-1 >>> 4 294 967 296
            ulong uInt64 = 3; // от 0 до 2^64 >>> 18 446 744 073 709 551 616



            // Примечание 1 Работает с C# 7.0

            // В дополнение к стандартныой десятичной записи, целые числа также могут быть
            // записаны в шестнадцатеричной и двоичной форме.
            // Для шестнадцатеричной нужно использовать префикс 0x
            // Для двоичной нужно использовать префикс 0b
            
            // Пример
            int hexNumber = 0x7C6; // 0х7С6 - это 1990 в десятичной форме 
            Console.WriteLine(hexNumber); // 1990

            int binNumber = 0x11100; // 0b11100 - это 28 в десятичной форме
            Console.WriteLine(binNumber);



            // Примечание 2 Работает с C# 7.0

            // Добавлено использование разделителей цифр (_) для читабельности длинных чисел.
            int number = 100000000;
            int _number = 100_000_000;



            /// Вещественные 1.5, 4.025, 8.250 или с плавающей точкой

            // Постоянные числа с плавающей точкой в C#  всегда сохраняються как переменная типа double,
            // Для использования типа float требуется в конце добавить символ F или f
            // Аналогично для типа decimal требуется в конце добавить символ M или m
            // Аналогично для типа double требуется в конце добавить символ D или d необязательно

            // Пример
            float floatVariable = 3.14f;
            double doubleVariable = 3.14;
            decimal decimalVariable = 3.14M;

            // Тип float принимает значения От ±1,5 х 10^(-45) до 3,4 x 10^38 точность - 7 цифр (после точки)

            floatVariable = 1.12345678910f;
            Console.WriteLine(floatVariable); // 1.1234567

            // Тип double принимает значения От до точность - 15 цифр
            // Тип decimal принимает значения От до точность - 28 цифр
            #endregion

            #region Строковый
            /// Любая строка в двойных кавычках - "вот так"

            // Тип данных используется для хранения строковых констант и обрамляется в двойные кавычки

            string word = "Привет!";
            word = "Привет, мир";
            #endregion

            #region Символьный
            /// Переменная символьная хранит символы одинарных кавычках в - ''

            // Тип char может содержать один Unicode-символ

            char VarChar1 = 'a'; Console.WriteLine(VarChar1); // a
            char VarChar2 = 'ю'; Console.WriteLine(VarChar2); // ю
            char VarChar3 = '!'; Console.WriteLine(VarChar3); // !
            char VarChar4 = '&'; Console.WriteLine(VarChar4); // &
            char VarChar5 = '9'; Console.WriteLine(VarChar5); // 9
            char VarChar6 = '§'; Console.WriteLine(VarChar6); // будет ошибка
            #endregion

            #region Логический
            // истина - true
            // ложь - false

            // Тип bool может хранить логическое значение, которое принимает значение
            // правда или ложь.
            // Эти значения указываются с ключевыми словами true и false

            bool flag = true; // переменной flag присвоить истину
            flag = false; // переменной flag присвоить ложь
            #endregion
        }
    }
}